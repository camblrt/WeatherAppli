System.register(["angular2/core", "./weather.service", "./weather-item", "rxjs/Subject", "./../language", "./../system"], function(exports_1, context_1) {
    "use strict";
    var __moduleName = context_1 && context_1.id;
    var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
        if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
        return c > 3 && r && Object.defineProperty(target, key, r), r;
    };
    var __metadata = (this && this.__metadata) || function (k, v) {
        if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
    };
    var core_1, weather_service_1, weather_item_1, Subject_1, language_1, system_1;
    var WeatherSearchComponent;
    return {
        setters:[
            function (core_1_1) {
                core_1 = core_1_1;
            },
            function (weather_service_1_1) {
                weather_service_1 = weather_service_1_1;
            },
            function (weather_item_1_1) {
                weather_item_1 = weather_item_1_1;
            },
            function (Subject_1_1) {
                Subject_1 = Subject_1_1;
            },
            function (language_1_1) {
                language_1 = language_1_1;
            },
            function (system_1_1) {
                system_1 = system_1_1;
            }],
        execute: function() {
            WeatherSearchComponent = (function () {
                function WeatherSearchComponent(_weatherService) {
                    this._weatherService = _weatherService;
                    this.searchStream = new Subject_1.Subject();
                    this.data = {};
                }
                WeatherSearchComponent.prototype.chooseLang = function (value) {
                    var lang = new language_1.Language(value);
                    this._weatherService.changeLanguage(lang);
                    console.log(lang);
                };
                WeatherSearchComponent.prototype.chooseSystem = function (value) {
                    var system = new system_1.System(value);
                    this._weatherService.changeSystem(system);
                    console.log(system);
                };
                WeatherSearchComponent.prototype.onSearchLocation = function (cityName) {
                    this.searchStream
                        .next(cityName);
                };
                WeatherSearchComponent.prototype.onSubmit = function (form) {
                    var _this = this;
                    form.value.location = document.getElementById("city").value;
                    console.log(form.value.location);
                    this._weatherService.searchWeatherData(form.value.location, this._weatherService.getLanguage(), this._weatherService.getSystem())
                        .subscribe(function (data) {
                        var weatherItem = new weather_item_1.WeatherItem(_this._weatherService.getUnit(), data.city.name, data.list[0].weather[0].description, data.list[0].temp.day, data.list[0].weather[0].icon, data.list[1].weather[0].description, data.list[1].temp.day, data.list[1].weather[0].icon, data.list[2].weather[0].description, data.list[2].temp.day, data.list[2].weather[0].icon, data.list[3].weather[0].description, data.list[3].temp.day, data.list[3].weather[0].icon, data.list[4].weather[0].description, data.list[4].temp.day, data.list[4].weather[0].icon);
                        _this._weatherService.addWeatherItem(weatherItem);
                    });
                };
                WeatherSearchComponent = __decorate([
                    core_1.Component({
                        selector: 'weather-search',
                        template: "\n\n  <div class=\"col-md-2 col-md-offset-1\">\n    <div class=\"panel panel-danger\">\n      <div class=\"panel-heading\">Select your language</div>\n      <ul class=\"list-group\">\n        <li class=\"list-group-item\">\n        <label>\n            <input #Francais name=\"language\" type=\"radio\" value=\"Francais\" (change)=\"chooseLang(Francais.value)\" />\n            Francais\n        </label>\n        </li>\n        <li class=\"list-group-item\">\n        <label>\n            <input checked #English name=\"language\" type=\"radio\"  value=\"English\" (click)=\"chooseLang(English.value)\" />\n            English\n        </label>\n        </li>\n      </ul>\n    </div>\n  </div>\n\n\n\n  <div class=\"col-md-2 col-md-offset-1\">\n    <div class=\"panel panel-danger\">\n      <div class=\"panel-heading\">Select your unit</div>\n      <ul class=\"list-group\">\n        <li class=\"list-group-item\">\n        <label>\n            <input checked #metric name=\"system\" type=\"radio\" value=\"metric\" (change)=\"chooseSystem(metric.value)\" />\n            Metric (\u00B0C)\n        </label>\n        </li>\n        <li class=\"list-group-item\">\n        <label>\n            <input #imperial name=\"system\" type=\"radio\"  value=\"imperial\" (click)=\"chooseSystem(imperial.value)\" />\n            Imperial (\u00B0F)\n        </label>\n        </li>\n      </ul>\n    </div>\n  </div>\n\n  <br><br>\n\n  <div class=\"col-md-3 col-md-offset-2\">\n    <div class=\"panel panel-danger\">\n      <ul class=\"list-group\">\n        <li class=\"list-group-item\">\n          <p>Want to see the weather of your last research ? </p>\n          <span class=\"input-group-btn\">\n            <button  type=\"submit\" onclick=\"ReadCookie()\" class=\"btn btn-danger btn-block btn-large\">GO</button>\n          </span>\n        </li>\n      </ul>\n    </div>\n  </div>\n\n  <div class=\"col-md-3 col-md-offset-2\">\n    <div class=\"panel panel-danger\">\n      <div class=\"panel-heading\">Select your city</div>\n      <ul class=\"list-group\">\n        <li class=\"list-group-item\">\n        <form (ngSubmit)=\"onSubmit(f)\" #f=\"ngForm\" name=\"myform1\" action=\"\">\n          <input ngControl= \"location\" type=\"text\" name=\"customer\" placeholder=\"Find your city place\" id=\"city\" input=\"onSearchLocation(this.value)\" required #input>\n          <span class=\"input-group-btn\">\n            <button type=\"submit\" onclick=\"WriteCookie()\" class=\"btn btn-danger btn-block btn-large\" onclick=\"WriteCookie();\">Search</button>\n          </span>\n        </form>\n        </li>\n      </ul>\n    </div>\n  </div>\n\n  ",
                        styleUrls: ['css/site.css', 'css/site.min.css', 'css/bootstrap.min.css', 'css/style.css']
                    }), 
                    __metadata('design:paramtypes', [weather_service_1.WeatherService])
                ], WeatherSearchComponent);
                return WeatherSearchComponent;
            }());
            exports_1("WeatherSearchComponent", WeatherSearchComponent);
        }
    }
});

//# sourceMappingURL=data:application/json;charset=utf8;base64,
